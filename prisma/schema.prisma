generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  userName String
  password String @db.VarChar(256)
  displayName String
  isAdmin Boolean @default(false)

  recipe Recipe[]
  recipeRating RecipeRating[]
}

model Recipe {
  id Int @id @default(autoincrement())
  ownerId Int
  name String?
  preparedTime Int?
  description String? @db.Text
  video String?
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @updatedAt @db.Timestamp(0)
  deletedAt DateTime? @db.Timestamp(0)

  user User @relation(fields: [ownerId], references: [id])

  recipeTag RecipeTag[]
  recipeRating RecipeRating[]
  ingredientsTable IngredientsTable[]
  step Step[]
}

model Tag {
  id Int @id @default(autoincrement())
  tagName String? @db.VarChar(50)

  recipeTag RecipeTag[]
}

model RecipeTag {
  recipeId Int
  tagId Int

  recipe Recipe @relation(fields: [recipeId], references: [id])
  tag Tag @relation(fields: [tagId], references: [id])

  @@id([recipeId, tagId])
}

model RecipeRating {
  userId Int
  recipeId Int
  isFavorite Boolean?
  isTasteGood Boolean?
  isEasyToFollow Boolean?

  user User @relation(fields: [userId], references: [id])
  recipe Recipe @relation(fields: [recipeId], references: [id])

  @@id([userId, recipeId])
}

model Ingredient {
  id Int @id @default(autoincrement())
  tableId Int
  name String?
  amount String?
  unit String?

  ingredientstable IngredientsTable @relation(fields: [tableId], references: [tableId])
}

model IngredientsTable {
  tableId Int @id @default(autoincrement())
  recipeId Int 
  header String?

  recipe Recipe @relation(fields: [recipeId], references: [id])

  ingredient Ingredient[]
}

model Step {
  id Int @id @default(autoincrement())
  recipeId Int
  header String?
  description String? @db.MediumText
  image String?

  recipe Recipe @relation(fields: [recipeId], references: [id])
}

